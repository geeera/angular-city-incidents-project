
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$magenta-palette,
      tertiary: mat.$violet-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


// Overrides

$incident-colors: (
  severity-5: #670806,
  severity-4: #e53935,
  severity-3: #fb8c00,
  severity-2: #d1b22b,
  severity-1: #99df2e,
);

@each $class, $color in $incident-colors {
  .#{$class} {
    @include mat.icon-overrides((
      color: $color,
    ))
  }
}

@include mat.form-field-overrides((
  filled-container-color: none
));

@include mat.menu-overrides((
  container-color: none
));

.blur {
  backdrop-filter: blur(20px);
}

button[mat-fab].blur {
  background: none;
  backdrop-filter: blur(20px);
}
